setState-
______________________

Always use the set state method as this will re render the dom and we can see the updated data

import React,{Component} from 'react'

class Increment extends React.Component{
 constructor(){
     super()
     this.state = {
         count:0
     }
 }
 increment(){
//the value can be vary as setState is asyn call so use the call back in second parameter in second state
     this.setState({
         count: this.state.count + 1
     },
     () => {
         console.log("actual value is" + this.state.count)
     })
      console.log('state val is ' + this.state.count)
 }


    render(){
        return(
            <div>
               <h1>value of the counter is {this.state.count}</h1>
               <button onClick={() => this.increment()}>increment</button>
            </div>
        )
        }
}

export default Increment

______


Problem with increment-

React clubs multiple set state statement together

import React,{Component} from 'react'

class Increment extends React.Component{
 constructor(){
     super()
     this.state = {
         count:0
     }
 }
 increment(){
     this.setState({
         count: this.state.count + 1
     },
     () => {
         console.log("actual value is" + this.state.count)
     })
      console.log('state val is ' + this.state.count)
 }

 incrementfive(){
     this.increment();
     this.increment();
     this.increment();
     this.increment();
     this.increment();
 }


    render(){
        return(
            <div>
               <h1>value of the counter is {this.state.count}</h1>
               <button onClick={() => this.incrementfive()}>increment</button>
            </div>
        )
        }
}

export default Increment


_______


Working

import React,{Component} from 'react'

class Increment extends React.Component{
 constructor(){
     super()
     this.state = {
         count:0
     }
 }
 increment(){
     this.setState((previousstate) => ({
         count: previousstate.count + 1
     }))
      console.log('state val is ' + this.state.count)
 }

 incrementfive(){
     this.increment();
     this.increment();
     this.increment();
     this.increment();
     this.increment();
 }


    render(){
        return(
            <div>
               <h1>value of the counter is {this.state.count}</h1>
               <button onClick={() => this.incrementfive()}>increment</button>
            </div>
        )
        }
}

export default Increment

